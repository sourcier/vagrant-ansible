server {
    listen {{ item.port | default('80') }};

    server_name {{ item.server_name }};

    root {{ item.document_root }};

    index {{ item.indexes | default('app.php index.php index.html index.htm') }};

    error_log /var/log/nginx/{{ item.server_name }}.error.log;

    access_log /var/log/nginx/{{ item.server_name }}.access.log;

    # Disable access to hidden files
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    {% if item.symfony is defined and item.symfony == true %}
        location / {
            # Try to serve file directly, fallback to app.php
            try_files $uri /app.php$is_args$args;
        }

        # DEV
        # This rule should only be placed on your development environment
        # In production, don't include this and don't deploy app_dev.php or config.php
        location ~ ^/(app_dev|config)\.php(/|$) {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
        }

        # PROD
        location ~ ^/app\.php(/|$) {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
            # Prevents URIs that include the front controller. This will 404:
            # http://domain.tld/app.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }
    {% elif item.silex is defined and item.silex == true %}
        # Site root is redirected to the app boot script
        location = / {
            try_files @site @site;
        }

        # All other locations try other files first and go to our front controller if none of them exists
        location / {
            try_files $uri $uri/ @site;
        }

        # Return 404 for all php files as we do have a front controller
        location ~ \.php$ {
            return 404;
        }

        location @site {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param HTTPS off;
        }
    {% else%}
        location /
        {
            try_files $uri $uri/ =404;
        }

        # Pass PHP scripts to PHP-FPM
        location ~ \.php(/|$)
        {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param  HTTPS off;
        }
    {% endif %}
}
